# Makefile.in generated by automake 1.11.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/kbd
pkgincludedir = $(includedir)/kbd
pkglibdir = $(libdir)/kbd
pkglibexecdir = $(libexecdir)/kbd
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
am__append_1 = getkeycodes setkeycodes
am__append_2 = resizecons
#am__append_3 = \
#	setlogcons setvesablank getunimap clrunimap outpsfheader setpalette \
#	screendump spawn_console spawn_login

bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_5)
subdir = src
DIST_COMMON = $(dist_bin_SCRIPTS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/attributes.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
libcommon_a_AR = $(AR) $(ARFLAGS)
libcommon_a_LIBADD =
am_libcommon_a_OBJECTS = getfd.$(OBJEXT) xmalloc.$(OBJEXT)
libcommon_a_OBJECTS = $(am_libcommon_a_OBJECTS)
libfont_a_AR = $(AR) $(ARFLAGS)
libfont_a_LIBADD =
am_libfont_a_OBJECTS = psffontop.$(OBJEXT) utf8.$(OBJEXT) \
	kdmapop.$(OBJEXT) loadunimap.$(OBJEXT) kdfontop.$(OBJEXT)
libfont_a_OBJECTS = $(am_libfont_a_OBJECTS)
am__EXEEXT_1 = mapscrn$(EXEEXT) loadunimap$(EXEEXT)
am__EXEEXT_2 = getkeycodes$(EXEEXT) \
	setkeycodes$(EXEEXT)
am__EXEEXT_3 = resizecons$(EXEEXT)
#am__EXEEXT_4 = setlogcons$(EXEEXT) \
#	setvesablank$(EXEEXT) getunimap$(EXEEXT) \
#	clrunimap$(EXEEXT) outpsfheader$(EXEEXT) \
#	setpalette$(EXEEXT) screendump$(EXEEXT) \
#	spawn_console$(EXEEXT) \
#	spawn_login$(EXEEXT)
am__EXEEXT_5 = dumpkeys$(EXEEXT) loadkeys$(EXEEXT) showkey$(EXEEXT) \
	setfont$(EXEEXT) showconsolefont$(EXEEXT) setleds$(EXEEXT) \
	setmetamode$(EXEEXT) kbd_mode$(EXEEXT) psfxtable$(EXEEXT) \
	fgconsole$(EXEEXT) kbdrate$(EXEEXT) chvt$(EXEEXT) \
	deallocvt$(EXEEXT) openvt$(EXEEXT) kbdinfo$(EXEEXT) \
	setvtrgb$(EXEEXT) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 =
am_chvt_OBJECTS = $(am__objects_1) chvt.$(OBJEXT)
chvt_OBJECTS = $(am_chvt_OBJECTS)
chvt_LDADD = $(LDADD)
chvt_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am_clrunimap_OBJECTS = $(am__objects_1) clrunimap.$(OBJEXT)
clrunimap_OBJECTS = $(am_clrunimap_OBJECTS)
clrunimap_LDADD = $(LDADD)
clrunimap_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_deallocvt_OBJECTS = $(am__objects_1) deallocvt.$(OBJEXT)
deallocvt_OBJECTS = $(am_deallocvt_OBJECTS)
deallocvt_LDADD = $(LDADD)
deallocvt_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_dumpkeys_OBJECTS = $(am__objects_1) dumpkeys.$(OBJEXT)
dumpkeys_OBJECTS = $(am_dumpkeys_OBJECTS)
dumpkeys_LDADD = $(LDADD)
dumpkeys_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_fgconsole_OBJECTS = $(am__objects_1) fgconsole.$(OBJEXT)
fgconsole_OBJECTS = $(am_fgconsole_OBJECTS)
fgconsole_LDADD = $(LDADD)
fgconsole_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_getkeycodes_OBJECTS = $(am__objects_1) getkeycodes.$(OBJEXT)
getkeycodes_OBJECTS = $(am_getkeycodes_OBJECTS)
getkeycodes_LDADD = $(LDADD)
getkeycodes_DEPENDENCIES = libcommon.a libfont.a \
	libkeymap/libkeymap.la
am_getunimap_OBJECTS = $(am__objects_1) getunimap.$(OBJEXT)
getunimap_OBJECTS = $(am_getunimap_OBJECTS)
getunimap_LDADD = $(LDADD)
getunimap_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_kbd_mode_OBJECTS = $(am__objects_1) kbd_mode.$(OBJEXT)
kbd_mode_OBJECTS = $(am_kbd_mode_OBJECTS)
kbd_mode_LDADD = $(LDADD)
kbd_mode_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_kbdinfo_OBJECTS = $(am__objects_1) kbdinfo.$(OBJEXT)
kbdinfo_OBJECTS = $(am_kbdinfo_OBJECTS)
kbdinfo_LDADD = $(LDADD)
kbdinfo_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
kbdrate_SOURCES = kbdrate.c
kbdrate_OBJECTS = kbdrate.$(OBJEXT)
kbdrate_LDADD = $(LDADD)
kbdrate_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_loadkeys_OBJECTS = $(am__objects_1) loadkeys.$(OBJEXT)
loadkeys_OBJECTS = $(am_loadkeys_OBJECTS)
loadkeys_LDADD = $(LDADD)
loadkeys_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_loadunimap_OBJECTS = $(am__objects_1) \
	loadunimap-loadunimap.$(OBJEXT)
loadunimap_OBJECTS = $(am_loadunimap_OBJECTS)
loadunimap_LDADD = $(LDADD)
loadunimap_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
loadunimap_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(loadunimap_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_mapscrn_OBJECTS = $(am__objects_1) mapscrn-mapscrn.$(OBJEXT)
mapscrn_OBJECTS = $(am_mapscrn_OBJECTS)
mapscrn_LDADD = $(LDADD)
mapscrn_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
mapscrn_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mapscrn_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_openvt_OBJECTS = $(am__objects_1) openvt.$(OBJEXT)
openvt_OBJECTS = $(am_openvt_OBJECTS)
openvt_LDADD = $(LDADD)
openvt_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
outpsfheader_SOURCES = outpsfheader.c
outpsfheader_OBJECTS = outpsfheader.$(OBJEXT)
outpsfheader_LDADD = $(LDADD)
outpsfheader_DEPENDENCIES = libcommon.a libfont.a \
	libkeymap/libkeymap.la
am_psfxtable_OBJECTS = $(am__objects_1) psfxtable.$(OBJEXT)
psfxtable_OBJECTS = $(am_psfxtable_OBJECTS)
psfxtable_LDADD = $(LDADD)
psfxtable_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_resizecons_OBJECTS = $(am__objects_1) resizecons.$(OBJEXT)
resizecons_OBJECTS = $(am_resizecons_OBJECTS)
resizecons_LDADD = $(LDADD)
resizecons_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_screendump_OBJECTS = $(am__objects_1) screendump.$(OBJEXT)
screendump_OBJECTS = $(am_screendump_OBJECTS)
screendump_LDADD = $(LDADD)
screendump_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_setfont_OBJECTS = $(am__objects_1) setfont.$(OBJEXT) \
	mapscrn.$(OBJEXT)
setfont_OBJECTS = $(am_setfont_OBJECTS)
setfont_LDADD = $(LDADD)
setfont_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_setkeycodes_OBJECTS = $(am__objects_1) setkeycodes.$(OBJEXT)
setkeycodes_OBJECTS = $(am_setkeycodes_OBJECTS)
setkeycodes_LDADD = $(LDADD)
setkeycodes_DEPENDENCIES = libcommon.a libfont.a \
	libkeymap/libkeymap.la
setleds_SOURCES = setleds.c
setleds_OBJECTS = setleds.$(OBJEXT)
setleds_LDADD = $(LDADD)
setleds_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_setlogcons_OBJECTS = $(am__objects_1) setlogcons.$(OBJEXT)
setlogcons_OBJECTS = $(am_setlogcons_OBJECTS)
setlogcons_LDADD = $(LDADD)
setlogcons_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
setmetamode_SOURCES = setmetamode.c
setmetamode_OBJECTS = setmetamode.$(OBJEXT)
setmetamode_LDADD = $(LDADD)
setmetamode_DEPENDENCIES = libcommon.a libfont.a \
	libkeymap/libkeymap.la
am_setpalette_OBJECTS = $(am__objects_1) setpalette.$(OBJEXT)
setpalette_OBJECTS = $(am_setpalette_OBJECTS)
setpalette_LDADD = $(LDADD)
setpalette_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_setvesablank_OBJECTS = $(am__objects_1) setvesablank.$(OBJEXT)
setvesablank_OBJECTS = $(am_setvesablank_OBJECTS)
setvesablank_LDADD = $(LDADD)
setvesablank_DEPENDENCIES = libcommon.a libfont.a \
	libkeymap/libkeymap.la
am_setvtrgb_OBJECTS = $(am__objects_1) setvtrgb.$(OBJEXT)
setvtrgb_OBJECTS = $(am_setvtrgb_OBJECTS)
setvtrgb_LDADD = $(LDADD)
setvtrgb_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
am_showconsolefont_OBJECTS = $(am__objects_1) \
	showconsolefont.$(OBJEXT)
showconsolefont_OBJECTS = $(am_showconsolefont_OBJECTS)
showconsolefont_LDADD = $(LDADD)
showconsolefont_DEPENDENCIES = libcommon.a libfont.a \
	libkeymap/libkeymap.la
am_showkey_OBJECTS = $(am__objects_1) showkey.$(OBJEXT)
showkey_OBJECTS = $(am_showkey_OBJECTS)
showkey_LDADD = $(LDADD)
showkey_DEPENDENCIES = libcommon.a libfont.a libkeymap/libkeymap.la
spawn_console_SOURCES = spawn_console.c
spawn_console_OBJECTS = spawn_console.$(OBJEXT)
spawn_console_LDADD = $(LDADD)
spawn_console_DEPENDENCIES = libcommon.a libfont.a \
	libkeymap/libkeymap.la
spawn_login_SOURCES = spawn_login.c
spawn_login_OBJECTS = spawn_login.$(OBJEXT)
spawn_login_LDADD = $(LDADD)
spawn_login_DEPENDENCIES = libcommon.a libfont.a \
	libkeymap/libkeymap.la
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(dist_bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libcommon_a_SOURCES) $(libfont_a_SOURCES) $(chvt_SOURCES) \
	$(clrunimap_SOURCES) $(deallocvt_SOURCES) $(dumpkeys_SOURCES) \
	$(fgconsole_SOURCES) $(getkeycodes_SOURCES) \
	$(getunimap_SOURCES) $(kbd_mode_SOURCES) $(kbdinfo_SOURCES) \
	kbdrate.c $(loadkeys_SOURCES) $(loadunimap_SOURCES) \
	$(mapscrn_SOURCES) $(openvt_SOURCES) outpsfheader.c \
	$(psfxtable_SOURCES) $(resizecons_SOURCES) \
	$(screendump_SOURCES) $(setfont_SOURCES) \
	$(setkeycodes_SOURCES) setleds.c $(setlogcons_SOURCES) \
	setmetamode.c $(setpalette_SOURCES) $(setvesablank_SOURCES) \
	$(setvtrgb_SOURCES) $(showconsolefont_SOURCES) \
	$(showkey_SOURCES) spawn_console.c spawn_login.c
DIST_SOURCES = $(libcommon_a_SOURCES) $(libfont_a_SOURCES) \
	$(chvt_SOURCES) $(clrunimap_SOURCES) $(deallocvt_SOURCES) \
	$(dumpkeys_SOURCES) $(fgconsole_SOURCES) \
	$(getkeycodes_SOURCES) $(getunimap_SOURCES) \
	$(kbd_mode_SOURCES) $(kbdinfo_SOURCES) kbdrate.c \
	$(loadkeys_SOURCES) $(loadunimap_SOURCES) $(mapscrn_SOURCES) \
	$(openvt_SOURCES) outpsfheader.c $(psfxtable_SOURCES) \
	$(resizecons_SOURCES) $(screendump_SOURCES) $(setfont_SOURCES) \
	$(setkeycodes_SOURCES) setleds.c $(setlogcons_SOURCES) \
	setmetamode.c $(setpalette_SOURCES) $(setvesablank_SOURCES) \
	$(setvtrgb_SOURCES) $(showconsolefont_SOURCES) \
	$(showkey_SOURCES) spawn_console.c spawn_login.c
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/anselm/src/bin/kbd/config/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/anselm/src/bin/kbd/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/anselm/src/bin/kbd/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/anselm/src/bin/kbd/config/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wextra -Wmissing-noreturn -Wdisabled-optimization -Wcast-align -Wshadow -Wmissing-format-attribute -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations
CHECK_CFLAGS = -pthread 
CHECK_LIBS = -lcheck_pic -pthread -lrt -lm 
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GMSGFMT = :
GREP = /bin/grep
HAVE_DOXYGEN = no
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/anselm/src/bin/kbd/config/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = $(top_builddir)/config/mkinstalldirs
MSGFMT = :
MSGMERGE = :
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = kbd
PACKAGE_BUGREPORT = gladkov.alexey@gmail.com
PACKAGE_NAME = kbd
PACKAGE_STRING = kbd 2.0.2
PACKAGE_TARNAME = kbd
PACKAGE_URL = http://kbd-project.org/
PACKAGE_VERSION = 2.0.2
PAM_LIBS = -lpam -lpam_misc
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 2.0.2
XGETTEXT = :
YACC = bison -y
YFLAGS = 
abs_builddir = /home/anselm/src/bin/kbd/src
abs_srcdir = /home/anselm/src/bin/kbd/src
abs_top_builddir = /home/anselm/src/bin/kbd
abs_top_srcdir = /home/anselm/src/bin/kbd
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/anselm/src/bin/kbd/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = \
	-I$(srcdir)/libkeymap -I$(builddir)/libkeymap \
	-I$(srcdir)/libkeymap/keymap -I$(builddir)/libkeymap/keymap \
	-DDATADIR=\"$(datadir)\" -DLOCALEDIR=\"$(localedir)\" \
	-D_FORTIFY_SOURCE=2 \
	-funit-at-a-time

SUBDIRS = vlock libkeymap
OLDPROGS = mapscrn loadunimap
PROGS = dumpkeys loadkeys showkey setfont showconsolefont setleds \
	setmetamode kbd_mode psfxtable fgconsole kbdrate chvt \
	deallocvt openvt kbdinfo setvtrgb $(am__append_1) \
	$(am__append_2) $(am__append_3)
dist_bin_SCRIPTS = unicode_start unicode_stop
EXTRA_DIST = \
	wctomb.c \
	totextmode.c README.cad README.init README.openvt \
	cad

libcommon_a_SOURCES = \
	getfd.c getfd.h \
	xmalloc.c xmalloc.h

libfont_a_SOURCES = \
	psf.h psffontop.c psffontop.h \
	utf8.c utf8.h \
	kdmapop.c kdmapop.h \
	loadunimap.c loadunimap.h \
	kdfontop.c kdfontop.h

ALL_S = nls.h paths.h version.h kbd.h
chvt_SOURCES = $(ALL_S) chvt.c
clrunimap_SOURCES = $(ALL_S) clrunimap.c
deallocvt_SOURCES = $(ALL_S) deallocvt.c
fgconsole_SOURCES = $(ALL_S) fgconsole.c
getkeycodes_SOURCES = $(ALL_S) getkeycodes.c
getunimap_SOURCES = $(ALL_S) getunimap.c
kbd_mode_SOURCES = $(ALL_S) kbd_mode.c
loadunimap_SOURCES = $(ALL_S) loadunimap.c
mapscrn_SOURCES = $(ALL_S) mapscrn.c
openvt_SOURCES = $(ALL_S) openvt.c
psfxtable_SOURCES = $(ALL_S) psfxtable.c
resizecons_SOURCES = $(ALL_S) resizecons.c
screendump_SOURCES = $(ALL_S) screendump.c
setfont_SOURCES = $(ALL_S) setfont.c mapscrn.c
setkeycodes_SOURCES = $(ALL_S) setkeycodes.c
setvtrgb_SOURCES = $(ALL_S) setvtrgb.c
setlogcons_SOURCES = $(ALL_S) setlogcons.c
setpalette_SOURCES = $(ALL_S) setpalette.c
setvesablank_SOURCES = $(ALL_S) setvesablank.c
showconsolefont_SOURCES = $(ALL_S) showconsolefont.c
showkey_SOURCES = $(ALL_S) showkey.c
kbdinfo_SOURCES = $(ALL_S) kbdinfo.c
dumpkeys_SOURCES = $(ALL_S) dumpkeys.c
loadkeys_SOURCES = $(ALL_S) loadkeys.c
mapscrn_CFLAGS = -DMAIN
loadunimap_CFLAGS = -DMAIN
noinst_LIBRARIES = libcommon.a libfont.a
LDADD = libcommon.a libfont.a libkeymap/libkeymap.la
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libcommon.a: $(libcommon_a_OBJECTS) $(libcommon_a_DEPENDENCIES) $(EXTRA_libcommon_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcommon.a
	$(AM_V_AR)$(libcommon_a_AR) libcommon.a $(libcommon_a_OBJECTS) $(libcommon_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcommon.a
libfont.a: $(libfont_a_OBJECTS) $(libfont_a_DEPENDENCIES) $(EXTRA_libfont_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libfont.a
	$(AM_V_AR)$(libfont_a_AR) libfont.a $(libfont_a_OBJECTS) $(libfont_a_LIBADD)
	$(AM_V_at)$(RANLIB) libfont.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
chvt$(EXEEXT): $(chvt_OBJECTS) $(chvt_DEPENDENCIES) $(EXTRA_chvt_DEPENDENCIES) 
	@rm -f chvt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(chvt_OBJECTS) $(chvt_LDADD) $(LIBS)
clrunimap$(EXEEXT): $(clrunimap_OBJECTS) $(clrunimap_DEPENDENCIES) $(EXTRA_clrunimap_DEPENDENCIES) 
	@rm -f clrunimap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clrunimap_OBJECTS) $(clrunimap_LDADD) $(LIBS)
deallocvt$(EXEEXT): $(deallocvt_OBJECTS) $(deallocvt_DEPENDENCIES) $(EXTRA_deallocvt_DEPENDENCIES) 
	@rm -f deallocvt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(deallocvt_OBJECTS) $(deallocvt_LDADD) $(LIBS)
dumpkeys$(EXEEXT): $(dumpkeys_OBJECTS) $(dumpkeys_DEPENDENCIES) $(EXTRA_dumpkeys_DEPENDENCIES) 
	@rm -f dumpkeys$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dumpkeys_OBJECTS) $(dumpkeys_LDADD) $(LIBS)
fgconsole$(EXEEXT): $(fgconsole_OBJECTS) $(fgconsole_DEPENDENCIES) $(EXTRA_fgconsole_DEPENDENCIES) 
	@rm -f fgconsole$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fgconsole_OBJECTS) $(fgconsole_LDADD) $(LIBS)
getkeycodes$(EXEEXT): $(getkeycodes_OBJECTS) $(getkeycodes_DEPENDENCIES) $(EXTRA_getkeycodes_DEPENDENCIES) 
	@rm -f getkeycodes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(getkeycodes_OBJECTS) $(getkeycodes_LDADD) $(LIBS)
getunimap$(EXEEXT): $(getunimap_OBJECTS) $(getunimap_DEPENDENCIES) $(EXTRA_getunimap_DEPENDENCIES) 
	@rm -f getunimap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(getunimap_OBJECTS) $(getunimap_LDADD) $(LIBS)
kbd_mode$(EXEEXT): $(kbd_mode_OBJECTS) $(kbd_mode_DEPENDENCIES) $(EXTRA_kbd_mode_DEPENDENCIES) 
	@rm -f kbd_mode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(kbd_mode_OBJECTS) $(kbd_mode_LDADD) $(LIBS)
kbdinfo$(EXEEXT): $(kbdinfo_OBJECTS) $(kbdinfo_DEPENDENCIES) $(EXTRA_kbdinfo_DEPENDENCIES) 
	@rm -f kbdinfo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(kbdinfo_OBJECTS) $(kbdinfo_LDADD) $(LIBS)
kbdrate$(EXEEXT): $(kbdrate_OBJECTS) $(kbdrate_DEPENDENCIES) $(EXTRA_kbdrate_DEPENDENCIES) 
	@rm -f kbdrate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(kbdrate_OBJECTS) $(kbdrate_LDADD) $(LIBS)
loadkeys$(EXEEXT): $(loadkeys_OBJECTS) $(loadkeys_DEPENDENCIES) $(EXTRA_loadkeys_DEPENDENCIES) 
	@rm -f loadkeys$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(loadkeys_OBJECTS) $(loadkeys_LDADD) $(LIBS)
loadunimap$(EXEEXT): $(loadunimap_OBJECTS) $(loadunimap_DEPENDENCIES) $(EXTRA_loadunimap_DEPENDENCIES) 
	@rm -f loadunimap$(EXEEXT)
	$(AM_V_CCLD)$(loadunimap_LINK) $(loadunimap_OBJECTS) $(loadunimap_LDADD) $(LIBS)
mapscrn$(EXEEXT): $(mapscrn_OBJECTS) $(mapscrn_DEPENDENCIES) $(EXTRA_mapscrn_DEPENDENCIES) 
	@rm -f mapscrn$(EXEEXT)
	$(AM_V_CCLD)$(mapscrn_LINK) $(mapscrn_OBJECTS) $(mapscrn_LDADD) $(LIBS)
openvt$(EXEEXT): $(openvt_OBJECTS) $(openvt_DEPENDENCIES) $(EXTRA_openvt_DEPENDENCIES) 
	@rm -f openvt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openvt_OBJECTS) $(openvt_LDADD) $(LIBS)
outpsfheader$(EXEEXT): $(outpsfheader_OBJECTS) $(outpsfheader_DEPENDENCIES) $(EXTRA_outpsfheader_DEPENDENCIES) 
	@rm -f outpsfheader$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(outpsfheader_OBJECTS) $(outpsfheader_LDADD) $(LIBS)
psfxtable$(EXEEXT): $(psfxtable_OBJECTS) $(psfxtable_DEPENDENCIES) $(EXTRA_psfxtable_DEPENDENCIES) 
	@rm -f psfxtable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(psfxtable_OBJECTS) $(psfxtable_LDADD) $(LIBS)
resizecons$(EXEEXT): $(resizecons_OBJECTS) $(resizecons_DEPENDENCIES) $(EXTRA_resizecons_DEPENDENCIES) 
	@rm -f resizecons$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(resizecons_OBJECTS) $(resizecons_LDADD) $(LIBS)
screendump$(EXEEXT): $(screendump_OBJECTS) $(screendump_DEPENDENCIES) $(EXTRA_screendump_DEPENDENCIES) 
	@rm -f screendump$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(screendump_OBJECTS) $(screendump_LDADD) $(LIBS)
setfont$(EXEEXT): $(setfont_OBJECTS) $(setfont_DEPENDENCIES) $(EXTRA_setfont_DEPENDENCIES) 
	@rm -f setfont$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setfont_OBJECTS) $(setfont_LDADD) $(LIBS)
setkeycodes$(EXEEXT): $(setkeycodes_OBJECTS) $(setkeycodes_DEPENDENCIES) $(EXTRA_setkeycodes_DEPENDENCIES) 
	@rm -f setkeycodes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setkeycodes_OBJECTS) $(setkeycodes_LDADD) $(LIBS)
setleds$(EXEEXT): $(setleds_OBJECTS) $(setleds_DEPENDENCIES) $(EXTRA_setleds_DEPENDENCIES) 
	@rm -f setleds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setleds_OBJECTS) $(setleds_LDADD) $(LIBS)
setlogcons$(EXEEXT): $(setlogcons_OBJECTS) $(setlogcons_DEPENDENCIES) $(EXTRA_setlogcons_DEPENDENCIES) 
	@rm -f setlogcons$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setlogcons_OBJECTS) $(setlogcons_LDADD) $(LIBS)
setmetamode$(EXEEXT): $(setmetamode_OBJECTS) $(setmetamode_DEPENDENCIES) $(EXTRA_setmetamode_DEPENDENCIES) 
	@rm -f setmetamode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setmetamode_OBJECTS) $(setmetamode_LDADD) $(LIBS)
setpalette$(EXEEXT): $(setpalette_OBJECTS) $(setpalette_DEPENDENCIES) $(EXTRA_setpalette_DEPENDENCIES) 
	@rm -f setpalette$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setpalette_OBJECTS) $(setpalette_LDADD) $(LIBS)
setvesablank$(EXEEXT): $(setvesablank_OBJECTS) $(setvesablank_DEPENDENCIES) $(EXTRA_setvesablank_DEPENDENCIES) 
	@rm -f setvesablank$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setvesablank_OBJECTS) $(setvesablank_LDADD) $(LIBS)
setvtrgb$(EXEEXT): $(setvtrgb_OBJECTS) $(setvtrgb_DEPENDENCIES) $(EXTRA_setvtrgb_DEPENDENCIES) 
	@rm -f setvtrgb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setvtrgb_OBJECTS) $(setvtrgb_LDADD) $(LIBS)
showconsolefont$(EXEEXT): $(showconsolefont_OBJECTS) $(showconsolefont_DEPENDENCIES) $(EXTRA_showconsolefont_DEPENDENCIES) 
	@rm -f showconsolefont$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(showconsolefont_OBJECTS) $(showconsolefont_LDADD) $(LIBS)
showkey$(EXEEXT): $(showkey_OBJECTS) $(showkey_DEPENDENCIES) $(EXTRA_showkey_DEPENDENCIES) 
	@rm -f showkey$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(showkey_OBJECTS) $(showkey_LDADD) $(LIBS)
spawn_console$(EXEEXT): $(spawn_console_OBJECTS) $(spawn_console_DEPENDENCIES) $(EXTRA_spawn_console_DEPENDENCIES) 
	@rm -f spawn_console$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spawn_console_OBJECTS) $(spawn_console_LDADD) $(LIBS)
spawn_login$(EXEEXT): $(spawn_login_OBJECTS) $(spawn_login_DEPENDENCIES) $(EXTRA_spawn_login_DEPENDENCIES) 
	@rm -f spawn_login$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spawn_login_OBJECTS) $(spawn_login_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/chvt.Po
include ./$(DEPDIR)/clrunimap.Po
include ./$(DEPDIR)/deallocvt.Po
include ./$(DEPDIR)/dumpkeys.Po
include ./$(DEPDIR)/fgconsole.Po
include ./$(DEPDIR)/getfd.Po
include ./$(DEPDIR)/getkeycodes.Po
include ./$(DEPDIR)/getunimap.Po
include ./$(DEPDIR)/kbd_mode.Po
include ./$(DEPDIR)/kbdinfo.Po
include ./$(DEPDIR)/kbdrate.Po
include ./$(DEPDIR)/kdfontop.Po
include ./$(DEPDIR)/kdmapop.Po
include ./$(DEPDIR)/loadkeys.Po
include ./$(DEPDIR)/loadunimap-loadunimap.Po
include ./$(DEPDIR)/loadunimap.Po
include ./$(DEPDIR)/mapscrn-mapscrn.Po
include ./$(DEPDIR)/mapscrn.Po
include ./$(DEPDIR)/openvt.Po
include ./$(DEPDIR)/outpsfheader.Po
include ./$(DEPDIR)/psffontop.Po
include ./$(DEPDIR)/psfxtable.Po
include ./$(DEPDIR)/resizecons.Po
include ./$(DEPDIR)/screendump.Po
include ./$(DEPDIR)/setfont.Po
include ./$(DEPDIR)/setkeycodes.Po
include ./$(DEPDIR)/setleds.Po
include ./$(DEPDIR)/setlogcons.Po
include ./$(DEPDIR)/setmetamode.Po
include ./$(DEPDIR)/setpalette.Po
include ./$(DEPDIR)/setvesablank.Po
include ./$(DEPDIR)/setvtrgb.Po
include ./$(DEPDIR)/showconsolefont.Po
include ./$(DEPDIR)/showkey.Po
include ./$(DEPDIR)/spawn_console.Po
include ./$(DEPDIR)/spawn_login.Po
include ./$(DEPDIR)/utf8.Po
include ./$(DEPDIR)/xmalloc.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

loadunimap-loadunimap.o: loadunimap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-loadunimap.o -MD -MP -MF $(DEPDIR)/loadunimap-loadunimap.Tpo -c -o loadunimap-loadunimap.o `test -f 'loadunimap.c' || echo '$(srcdir)/'`loadunimap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/loadunimap-loadunimap.Tpo $(DEPDIR)/loadunimap-loadunimap.Po
#	$(AM_V_CC)source='loadunimap.c' object='loadunimap-loadunimap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-loadunimap.o `test -f 'loadunimap.c' || echo '$(srcdir)/'`loadunimap.c

loadunimap-loadunimap.obj: loadunimap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-loadunimap.obj -MD -MP -MF $(DEPDIR)/loadunimap-loadunimap.Tpo -c -o loadunimap-loadunimap.obj `if test -f 'loadunimap.c'; then $(CYGPATH_W) 'loadunimap.c'; else $(CYGPATH_W) '$(srcdir)/loadunimap.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/loadunimap-loadunimap.Tpo $(DEPDIR)/loadunimap-loadunimap.Po
#	$(AM_V_CC)source='loadunimap.c' object='loadunimap-loadunimap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-loadunimap.obj `if test -f 'loadunimap.c'; then $(CYGPATH_W) 'loadunimap.c'; else $(CYGPATH_W) '$(srcdir)/loadunimap.c'; fi`

mapscrn-mapscrn.o: mapscrn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-mapscrn.o -MD -MP -MF $(DEPDIR)/mapscrn-mapscrn.Tpo -c -o mapscrn-mapscrn.o `test -f 'mapscrn.c' || echo '$(srcdir)/'`mapscrn.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mapscrn-mapscrn.Tpo $(DEPDIR)/mapscrn-mapscrn.Po
#	$(AM_V_CC)source='mapscrn.c' object='mapscrn-mapscrn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-mapscrn.o `test -f 'mapscrn.c' || echo '$(srcdir)/'`mapscrn.c

mapscrn-mapscrn.obj: mapscrn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-mapscrn.obj -MD -MP -MF $(DEPDIR)/mapscrn-mapscrn.Tpo -c -o mapscrn-mapscrn.obj `if test -f 'mapscrn.c'; then $(CYGPATH_W) 'mapscrn.c'; else $(CYGPATH_W) '$(srcdir)/mapscrn.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mapscrn-mapscrn.Tpo $(DEPDIR)/mapscrn-mapscrn.Po
#	$(AM_V_CC)source='mapscrn.c' object='mapscrn-mapscrn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-mapscrn.obj `if test -f 'mapscrn.c'; then $(CYGPATH_W) 'mapscrn.c'; else $(CYGPATH_W) '$(srcdir)/mapscrn.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-exec-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLIBRARIES ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_binSCRIPTS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-hook install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_binSCRIPTS


install-exec-hook:
	for i in psfaddtable psfgettable psfstriptable; do \
		rm -f $(DESTDIR)$(bindir)/$$i; \
		ln -s psfxtable $(DESTDIR)$(bindir)/$$i || exit $$?; \
	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
